#!/bin/bash
#
# scalr-upd-client - Scalarizr autoupdate daemon
#
### BEGIN INIT INFO
# Provides:          scalr-upd-client
# Required-Start:    $network $local_fs
# Required-Stop:
# Should-Start:      $named
# Should-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Scalarizr autoupdate daemon
# Description:       Scalarizr is a part of Scalr project
### END INIT INFO


. /lib/lsb/init-functions

PYTHON='/usr/bin/python'
NAME='scalr-upd-client'
PID_FILE='/var/run/scalr-upd-client.pid'
LOG_FILE='/var/log/scalarizr_update.log'
BINARY='/usr/bin/scalr-upd-client'

# Include defaults if available
if [ -f /etc/default/$NAME ] ; then
     . /etc/default/$NAME
fi

upd_start_daemon() {
	log_daemon_msg "starting $NAME"
	if upd_running; then
		log_end_msg 0
	else
		if start_daemon -p $PID_FILE $BINARY --daemonize  --pid-file $PID_FILE --log-file $LOG_FILE; then
			log_end_msg 0
		else
			log_end_msg 1
		fi
	fi
}

upd_stop_daemon() {
	log_daemon_msg "stopping $NAME"
	if upd_running; then
		if killproc -p $PID_FILE $PYTHON -INT; then
			sleep 1
			zomby_pids=$(ps -efww | grep 'bin/scalr-upd-client' | awk '{ print $2 }')
			if [ "$zomby_pids" ]; then
				for zomby_pid in $zomby_pids; do
					kill -9 $zomby_pid 2>/dev/null
				done
			fi
			log_end_msg 0
		else
			log_end_msg 1
		fi
	else
		log_end_msg 0		
	fi
}

upd_status_daemon() {
	if [ "`type -t status_of_proc`" = 'function' ]; then
		status_of_proc -p $PID_FILE $PYTHON $NAME && exit 0 || exit $?
	else
		pid=$(pidofproc -p $PID_FILE $PYTHON)
		rc=$?
		if [ $rc = '0' ]; then
			echo "$NAME (pid $pid) is running"
		else
			echo "$NAME is not running"
		fi
		exit $rc
	fi
}

upd_reload_daemon() {
	log_daemon_msg "reloading $NAME"
	if killproc -p $PID_FILE $PYTHON -HUP; then
		log_end_msg 0
	else
		log_end_msg 1
	fi
}

upd_restart_daemon() {
	upd_stop_daemon
	upd_start_daemon
}

upd_running() {
	pidofproc -p $PID_FILE $PYTHON > /dev/null
	return $?
}


case "$1" in
        start)
				upd_start_daemon
                ;;

		reload)
				upd_reload_daemon
				;;
             
		restart)
				upd_restart_daemon
				;;
				
		condrestart)
				if upd_running; then
					upd_restart_daemon
				fi
				;;
   
        stop)
				upd_stop_daemon
				;;

        status)
				upd_status_daemon
                ;;

        *)
                echo "Usage: $0 {start|stop|restart|condrestart|reload|status}"
                ;;
esac


